{"version":3,"file":"main.d15c0e13bb886255edfe.hot-update.js","sources":["webpack:///./src/components/Button/Button.css","webpack:///./src/components/Input/Input.css","webpack:///./src/components/NavBar/NavBar.css","webpack:///./src/components/TextArea/TextArea.css","webpack:///./src/components/Button/Button.tsx","webpack:///./src/components/Input/Input.tsx","webpack:///./src/components/NavBar/NavBar.css?2753","webpack:///./src/components/NavBar/NavBar.tsx","webpack:///./src/components/Select/Select.tsx","webpack:///./src/stories/NavBar.stories.tsx"],"sourcesContent":["// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/@storybook/addon-postcss/node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"* {\\n    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\\n}\\n\\n.commonButton {\\n    padding: 8px 12px;\\n    border: none;\\n    font-size: 16px;\\n    background-color: #0094DA;\\n    color: white;\\n    cursor: pointer;\\n    width: 357px;\\n    height: 41px;\\n    border-radius: 6px;\\n}\\n\\n.commonButton:hover {\\n    background-color: #9E9E9E;\\n}\\n\\n.commonButton:hover {\\n    box-shadow: rgba(17, 17, 26, 0.1) 0px 4px 16px, rgba(17, 17, 26, 0.05) 0px 8px 32px;\\n}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/@storybook/addon-postcss/node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".inputField {\\n    position: relative;\\n}\\n\\ninput[type='text'],\\ninput[type='email'] {\\n    padding: 8px 20px;\\n    background: #FFFFFF;\\n    border: 1px solid rgba(147, 128, 108, 0.25);\\n    border-radius: 6px;\\n    width: 357px;\\n    height: 30px;\\n    font-size: 16px;\\n    line-height: 16px;\\n    font-weight: 400;\\n}\\n\\ninput[type='password'] {\\n    padding: 8px 20px;\\n    border: 1px solid rgba(147, 128, 108, 0.25);\\n    border-radius: 6px;\\n    width: 357px;\\n    height: 30px;\\n    color: #000000;\\n    font-size: 16px;\\n    font-weight: 400;\\n    line-height: 16px;\\n}\\n\\n.inputField input:focus {\\n    background: #FFFFFF;\\n    border: 0.5px solid #0094DA;\\n    /* border: 1.8px solid #6b6b6b; */\\n    outline: none;\\n}\\n\\nspan.togglePasswordVisibility {\\n    float: right;\\n    margin-left: -50px;\\n    margin-top: 12px;\\n    position: absolute;\\n}\\n\\nspan.togglePlaceholderVisibility {\\n    pointer-events: none;\\n    height: 16.23px;\\n    width: 245.69px;\\n    opacity: 0.5;\\n    color: #6b6b6b;\\n    position: absolute;\\n    padding-left: 20px;\\n    left: 0px;\\n    top: 15px;\\n    font-style: normal;\\n    font-weight: 400;\\n    font-size: 18px;\\n    line-height: 19px;\\n    cursor: text;\\n}\\n\\n.inputField input:not(:placeholder-shown)+span.togglePlaceholderVisibility,\\n.inputField input:focus+span.togglePlaceholderVisibility {\\n    top: 2px;\\n    left: -15px;\\n    padding: 0px;\\n    color: #9E9E9E;\\n    -webkit-transform: scale(0.7) translateY(-10%) translateX(-8.5px);\\n    transform: scale(0.7) translateY(-10%) translateX(-8.5px);\\n}\\n\\n/* Code for the inline span and input Field */\\n.InputAddOn {\\n    display: flex;\\n    margin-bottom: 1.5em;\\n}\\n\\ninput.InputAddOn-field {\\n    color: #000000;\\n    width: 330px;\\n    font-weight: 400;\\n}\\n\\n.InputAddOn-field:not(:first-child) {\\n    border-left: 0;\\n}\\n\\n.InputAddOn-field:not(:last-child) {\\n    border-right: 0;\\n}\\n\\n.InputAddOn-item {\\n    background-color: rgba(147, 128, 108, 0.1);\\n    color: #666666;\\n    font: inherit;\\n    font-weight: normal;\\n}\\n\\n.InputAddOn-field,\\n.InputAddOn-item {\\n    /* border: 0.5px solid #0094DA; */\\n    border: 1px solid rgba(147, 128, 108, 0.25);\\n    padding: 14px 15px;\\n}\\n\\n.InputAddOn-field:first-child,\\n.InputAddOn-item:first-child {\\n    border-radius: 6px 0 0 6px;\\n}\\n\\n.InputAddOn-field:last-child,\\n.InputAddOn-item:last-child {\\n    border-radius: 0 6px 6px 0;\\n}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/@storybook/addon-postcss/node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"* {\\n  padding: 0;\\n}\\n\\n.dropdown {\\n  width: 100%;\\n}\\n\\nimg.logoSize {\\n  width: 40px;\\n}\\n\\n.navbar {\\n  background: #eeeeee;\\n  color: black;\\n  width: 100%;\\n  font-size: 18px;\\n  display: flex;\\n  flex-direction: row;\\n}\\n\\n.navbarItem {\\n  cursor: pointer;\\n  padding: 10px 5px;\\n  display: inline-flex;\\n}\\n\\n.active {\\n  background-color: #1ea7fd;\\n  color: #eeeeee;\\n}\\n\\n.navbarItem:hover,\\n.navbarSubItems:hover {\\n  background-color: #6cc4fc;\\n}\\n\\n.dropdown-content {\\n  position: absolute;\\n  background-color: #f1f1f1;\\n  min-width: 160px;\\n  z-index: 1;\\n  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\\n}\\n\\n.navbarItem:hover .dropdown-content {\\n  display: block;\\n}\\n\\n.dropdown-content a {\\n  color: black;\\n  padding: 12px 16px;\\n  display: block;\\n  text-decoration: none;\\n}\\n\\n.navbarSubItems {\\n  cursor: pointer;\\n  text-decoration: none;\\n  color: black;\\n}\\n\\ninput[type=checkbox] {\\n  display: none;\\n}\\n\\n.hamburger {\\n  display: none;\\n  font-size: 24px;\\n  user-select: none;\\n}\\n\\n.dropdown {\\n  position: relative;\\n  display: inline-block;\\n}\\n\\n.btnContainer {\\n  display: flex;\\n  flex-direction: row;\\n  position: absolute;\\n  right: 0;\\n}\\n\\n.btnItems {\\n  padding: 10px;\\n}\\n\\nbutton {\\n  padding: 5px 10px;\\n  cursor: pointer;\\n  border-radius: 15px;\\n  border: 0;\\n  background-color: #1ea7fd;\\n}\\n\\n.allLinks {\\n  display: flex;\\n  flex-direction: row;\\n  place-self: center;\\n}\\n\\n.navTitle {\\n  display: flex;\\n  flex-direction: row;\\n  padding: 10px 15px;\\n}\\n\\n.title {\\n  place-self: center;\\n  padding: 10px;\\n  cursor: pointer;\\n}\\n\\n.title:hover {\\n  color: #1ea7fd;\\n}\\n\\n@media screen and (min-width: 300px) and (max-width: 640px) {\\n  .navbar {\\n    background-color: transparent;\\n  }\\n\\n  .repNavLink {\\n    display: none;\\n  }\\n\\n  .allLinks {\\n    position: fixed;\\n    background-color: #f1f1f1;\\n    min-width: 50%;\\n    right: 50px;\\n    z-index: 1;\\n    top: 30px;\\n    display: block;\\n    box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\\n  }\\n\\n  .resNavBar {\\n    display: flex;\\n    flex-direction: column;\\n  }\\n\\n  .dropdown-content {\\n    position: inherit;\\n    z-index: 1;\\n  }\\n\\n  .navbarSubItems {\\n    display: none;\\n  }\\n\\n  .hamburger {\\n    display: block;\\n    font-size: 25px;\\n    cursor: pointer;\\n    position: absolute;\\n  }\\n\\n  label.hamburger {\\n    right: 5px;\\n    top: 10px;\\n  }\\n\\n  .hamburger:hover {\\n    color: #6cc4fc;\\n  }\\n\\n  #checkbox_toggle:checked~.dropdown-content {\\n    display: block;\\n  }\\n}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/@storybook/addon-postcss/node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".textField {\\n  padding: 15px;\\n  box-sizing: border-box;\\n  position: absolute;\\n  /* width: 746px;\\n  height: 283px; */\\n  background: #FFFFFF;\\n  border: 0.5px solid #0094DA;\\n  border-radius: 18px;\\n}\\n\\n.textField:focus {\\n  border: 1.8px solid #6b6b6b;\\n  outline: none;\\n}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import { type } from 'os';\nimport React from 'react';\nimport './Button.css';\n\nexport interface ButtonProps extends React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement> {\n    backgroundColor?: string;\n    color?: string;\n    onClick?: React.MouseEventHandler<HTMLButtonElement>;\n    className?: string;\n    type?: 'submit' | 'reset' | 'button';\n}\n\nexport const Button: React.FunctionComponent<ButtonProps> = (props) => {\n    const { children, backgroundColor, color, style, onClick, className, type } = props;\n    let _style: React.CSSProperties = style || {};\n    let _className: string = 'commonButton';\n    let _type: string = 'submit';\n    /* Override defaults */\n    if (color) _style.color = color;\n    if (type) _type = type;\n    if (className) _className = className;\n    if (backgroundColor) _style.backgroundColor = backgroundColor;\n\n    return (\n        <button className={_className} style={_style} {...props} onClick={onClick} type={type}>\n            {children}\n        </button>\n    );\n};\n","import React, { useState } from 'react';\nimport './Input.css';\nimport { ShowPassword } from '../../assets/ShowPassword';\nimport { ClosePassword } from '../../assets/ClosePassword';\n\nexport interface InputProps extends React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement> {\n    value?: string;\n    onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n    placeholder?: string;\n    autoFocus?: boolean;\n    disabled?: boolean;\n    name?: string;\n    type?: 'email' | 'password' | 'text';\n    className?: string;\n    adornment?: string;\n    ornament?: string;\n}\n\nexport const Input: React.FunctionComponent<InputProps> = (props) => {\n    const { className, placeholder, type, adornment, ornament, ...rest } = props;\n    const [showPassword, setShowPassword] = useState(false);\n\n    const togglePasswordVisibility = () => {\n        setShowPassword((prevState) => !prevState);\n    };\n\n    const inputType = type === 'password' ? (showPassword ? 'text' : 'password') : type;\n\n    const inputClassName = `inputField ${className} ${type === 'password' ? 'password' : ''}`;\n    // Set Defalut Values\n    let _placeholder: string = 'Input Field';\n    let _type: string = 'text';\n    // OverWrite the Default Values\n    if (placeholder) _placeholder = placeholder;\n    if (type) _type = type;\n\n    return (\n        <>\n            {type === 'password' && (\n                <>\n                    <div className={`inputField ${className}`}>\n                        <input {...rest} type={inputType} placeholder={_placeholder} />\n                        <span className=\"togglePasswordVisibility\" onClick={togglePasswordVisibility}>\n                            {showPassword ? <ClosePassword /> : <ShowPassword />}\n                        </span>\n                    </div>\n                </>\n            )}\n            {type !== 'password' && !adornment && !ornament && (\n                <>\n                    <div className={`inputField ${className}`}>\n                        <input {...rest} type={inputType} placeholder=\"&nbsp;\" type={inputType} />\n                        <span className=\"togglePlaceholderVisibility\">{placeholder}</span>\n                    </div>\n                </>\n            )}\n            {type !== 'password' && adornment && (\n                <>\n                    <div className={`inputField ${className}`}>\n                        <span className=\"InputAddOn-item\">{adornment}</span>\n                        <input className=\"InputAddOn-field\" placeholder={placeholder} {...rest} type={inputType} />\n                    </div>\n                </>\n            )}\n            {type !== 'password' && ornament && (\n                <>\n                    <div className={`inputField ${className}`}>\n                        <input className=\"InputAddOn-field\" placeholder={placeholder} {...rest} type={inputType} />\n                        <span className=\"InputAddOn-item\">{ornament}</span>\n                    </div>\n                </>\n            )}\n        </>\n    );\n};\n","var api = require(\"!../../../node_modules/@storybook/addon-postcss/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/@storybook/addon-postcss/node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/dist/cjs.js!./NavBar.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/@storybook/addon-postcss/node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/dist/cjs.js!./NavBar.css\",\n      function () {\n        content = require(\"!!../../../node_modules/@storybook/addon-postcss/node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/dist/cjs.js!./NavBar.css\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};","import React, { useState } from 'react';\nimport './NavBar.css';\n\nexport interface itemsInterface {\n    id: number;\n    title: string;\n    link: string;\n}\nexport interface buttonInterface {\n    id: number;\n    title: string;\n    link: string;\n}\n\nexport interface navbarArray {\n    id: number;\n    title?: string;\n    link?: string;\n    items?: itemsInterface[];\n    image?: string;\n    button?: buttonInterface[];\n}\n\nexport interface NavbarProps {\n    navbarData?: navbarArray[];\n}\n\nexport const NavBar: React.FunctionComponent<NavbarProps> = ({ navbarData }) => {\n    const [isOpen, setIsOpen] = useState(false);\n    const [resOpen, setResOpen] = useState(true);\n    const [curr, setCurr] = useState();\n    const [currSubItem, setCurrSubItem] = useState();\n\n    const handleItemClick = (id: any) => {\n        setIsOpen(!isOpen);\n        setCurr(id);\n        setCurrSubItem(null);\n    };\n\n    const handleSubItemClick = (id: any) => {\n        setCurrSubItem(id === currSubItem ? null : id);\n    };\n\n    const dropNav = () => {\n        setResOpen(!resOpen);\n    };\n\n    return (\n        <div className=\"dropdown\">\n            <div className=\"navbar\">\n                <div className=\"navTitle\">\n                    {navbarData.map((data, index: any) => {\n                        return (\n                            <>\n                                {data.image ? (\n                                    <>\n                                        <img\n                                            src={data.image}\n                                            alt={data.link}\n                                            className=\"logoSize\"\n                                            onClick={() => {\n                                                handleItemClick(data.id);\n                                            }}\n                                        />\n                                        <div\n                                            className=\"title\"\n                                            onClick={() => {\n                                                handleItemClick(data.id);\n                                            }}\n                                        >\n                                            {data.name}\n                                        </div>\n                                    </>\n                                ) : (\n                                    ''\n                                )}\n                            </>\n                        );\n                    })}\n                </div>\n                <div className=\"allLinks\">\n                    {navbarData.map((data, index: any) => {\n                        return (\n                            <>\n                                {data.title ? (\n                                    <div className={`repNavLink  ${!resOpen ? 'resNavBar' : ''}`}>\n                                        <div\n                                            className={`navbarItem ${curr === data.id ? 'active' : ''}`}\n                                            onClick={() => {\n                                                handleItemClick(data.id);\n                                            }}\n                                        >\n                                            {data.title}\n                                        </div>\n\n                                        <div className={`dropdown-content repNavLink  ${!resOpen ? 'resNavBar' : ''}`}>\n                                            {curr === data.id &&\n                                                data.items &&\n                                                isOpen &&\n                                                data?.items.map((itemval: any) => {\n                                                    return (\n                                                        <>\n                                                            <a\n                                                                href={itemval.link}\n                                                                onClick={() => {\n                                                                    handleSubItemClick(itemval.id);\n                                                                }}\n                                                                className={`navbarSubItems ${currSubItem === itemval.id ? 'active' : ''}`}\n                                                            >\n                                                                {itemval.title}\n                                                            </a>\n                                                        </>\n                                                    );\n                                                })}\n                                        </div>\n                                    </div>\n                                ) : (\n                                    ''\n                                )}\n                                <div className=\"btnContainer\">\n                                    {data.button &&\n                                        data.button.map((btns: any) => {\n                                            return (\n                                                <>\n                                                    <div className={`btnItems repNavLink  ${!resOpen ? 'resNavBar' : ''}`}>\n                                                        <button\n                                                            onClick={() => {\n                                                                handleItemClick(data.id);\n                                                            }}\n                                                        >\n                                                            {btns.title}\n                                                        </button>\n                                                    </div>\n                                                </>\n                                            );\n                                        })}\n                                </div>\n                            </>\n                        );\n                    })}\n                    {navbarData.map((data, index: any) => {\n                        return (\n                            <>\n                                <div className=\"btnContainer\"></div>\n                            </>\n                        );\n                    })}\n                </div>\n            </div>\n\n            <input type=\"checkbox\" id=\"checkbox_toggle\" />\n            <label for=\"checkbox_toggle\" className=\"hamburger\" onClick={dropNav}>\n                &#9776;\n            </label>\n        </div>\n    );\n};\n","import React, { ChangeEvent, InputHTMLAttributes, Ref, useEffect, useRef, useState } from 'react';\nimport { Icon } from '../../assets/DropdownIcon';\nimport { UpIcon } from '../../assets/DropUpIcon';\nimport { CloseIcon } from '../../assets/CloseIcon';\nimport './Select.css';\n\nexport interface SelectProps extends React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement> {\n    onChange?: any;\n    placeholder?: string;\n    disabled?: boolean;\n    position?: string;\n    name?: string;\n    options?: optionType[];\n    isMulti?: boolean;\n    isSearchable?: boolean;\n}\n\nexport interface optionType {\n    value: string;\n    label: string;\n}\n\nexport interface eType {\n    target: { value: React.SetStateAction<string> };\n}\n\nexport interface itemType {\n    value: string;\n}\n\nexport const Select: React.FunctionComponent<SelectProps> = ({ isMulti, options, placeholder, isSearchable, onChange }) => {\n    const [showMenu, setShowMenu] = useState<boolean>(false);\n    const [searchValue, setSearchValue] = useState<string>('');\n    const searchRef = useRef<HTMLInputElement>();\n    const inputRef = useRef<any>();\n    const [selectedValue, setSelectedValue] = useState<any>(isMulti ? [] : null);\n\n    useEffect(() => {\n        const handler = (e: { target: any }) => {\n            if (inputRef.current && !inputRef.current.contains(e.target)) {\n                setShowMenu(false);\n            }\n        };\n        window.addEventListener('click', handler);\n        return () => {\n            window.removeEventListener('click', handler);\n        };\n    });\n\n    useEffect(() => {\n        setSearchValue('');\n        if (showMenu && searchRef.current) {\n            searchRef.current.focus();\n        }\n    }, [showMenu]);\n\n    // Here OnSearch function is used to track the latest value of the search\n    const onSearch = (e: { target: HTMLInputElement }) => {\n        setSearchValue(e.target.value);\n    };\n\n    // Here getOptions is used to configure the options passed through props\n    const getOptions = () => {\n        if (!searchValue) {\n            return options;\n        }\n        return options.filter((option: any) => option.toLowerCase().indexOf(searchValue.toLowerCase()) >= 0);\n    };\n\n    const handleInputClick = () => {\n        setShowMenu(!showMenu);\n    };\n\n    // Here getDisplay is used to check if we have to show placeholder or not\n    const getDisplay = () => {\n        if (!selectedValue || selectedValue.length === 0) {\n            console.log('inside if', selectedValue);\n            return placeholder;\n        }\n        if (isMulti) {\n            return (\n                <div className=\"dropdown-tags\">\n                    {selectedValue.map((option: any) => (\n                        <div key={option} className=\"dropdown-tag-item\">\n                            {option}\n                            <span onClick={(e) => onTagRemove(e, option)} className=\"dropdown-tag-close\">\n                                <CloseIcon />\n                            </span>\n                        </div>\n                    ))}\n                </div>\n            );\n        }\n        return selectedValue;\n    };\n\n    const removeOption = (option: optionType) => {\n        return selectedValue.filter((item: itemType) => item !== option);\n    };\n    const onTagRemove = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>, option: optionType) => {\n        e.stopPropagation();\n        const newValue = removeOption(option);\n        setSelectedValue(newValue);\n        onChange(newValue);\n    };\n\n    const onItemClick = (option: optionType) => {\n        let newValue;\n        if (isMulti) {\n            if (selectedValue.findIndex((item: itemType) => item === option) >= 0) {\n                newValue = removeOption(option);\n            } else {\n                newValue = [...selectedValue, option];\n            }\n        } else {\n            newValue = option;\n        }\n        setSelectedValue(newValue);\n        onChange(newValue);\n    };\n\n    const isSelected = (option: optionType) => {\n        if (isMulti) {\n            return selectedValue.filter((item: itemType) => item === option).length > 0;\n        }\n        if (!selectedValue) {\n            return false;\n        }\n        return selectedValue === option;\n    };\n\n    return (\n        <>\n            <div className=\"dropdown-container\">\n                <div ref={inputRef} className=\"dropdown-input\" onClick={handleInputClick}>\n                    <div className=\"dropdown-selected-value\">{getDisplay()}</div>\n                    <div className=\"dropdown-tools\">\n                        <div className=\"dropdown-tool\">{showMenu ? <UpIcon /> : <Icon />}</div>\n                    </div>\n                    {showMenu && (\n                        <div className=\"dropdown-menu\">\n                            {isSearchable && (\n                                <div className=\"search-box\">\n                                    <input onChange={onSearch} value={searchValue} ref={searchRef} />\n                                </div>\n                            )}\n                            {options ? (\n                                getOptions().map((option: any) => (\n                                    <div onClick={() => onItemClick(option)} key={option} className={`dropdown-item ${isSelected(option) && 'selected'}`}>\n                                        {option}\n                                    </div>\n                                ))\n                            ) : (\n                                <div>Please add options</div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        </>\n    );\n};\n","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\\nimport { NavBar } from '../components/NavBar/NavBar';\\n\\nexport default {\\n    title: \\\"ReactComponentLibrary/NavBar\\\",\\n    component: NavBar\\n} as ComponentMeta<typeof NavBar>;\\n\\nconst Template: ComponentStory<typeof NavBar> = (args) => <NavBar {...args} />;\\n\\nexport const Primary = Template.bind({});\\n\\nPrimary.args = {\\n    navbarData: [\\n        {\\n            id: 0,\\n            name: 'Title',\\n            link: '/',\\n            items: [],\\n            image: 'https://img.freepik.com/free-vector/meta-icon-soci…ber-2021-bangkok-thailand_53876-157871.jpg?w=2000'\\n        },\\n        { id: 1, title: 'Home', link: '/', items: [] },\\n        {\\n            id: 2,\\n            title: 'About',\\n            link: '/about',\\n            items: [\\n                { id: 4, title: 'Our Story', link: '/about/story' },\\n                { id: 5, title: 'Our Team', link: '/about/team' }\\n            ]\\n        },\\n        {\\n            id: 3,\\n            title: 'Contact',\\n            link: '/contact',\\n            items: [\\n                { id: 6, title: 'CTO', link: '/contact/cto' },\\n                { id: 7, title: 'Manager', link: '/contact/manager' }\\n            ]\\n        },\\n        {\\n            // id: 13,\\n            // title: \\\"\\\",\\n            // link: \\\"\\\",\\n            // items: [],\\n            button: [\\n                { id: 11, title: 'Login', link: '/login' },\\n                { id: 12, title: 'SignUp', link: '/signup' }\\n            ]\\n        }\\n    ]\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Primary\":{\"startLoc\":{\"col\":48,\"line\":10},\"endLoc\":{\"col\":78,\"line\":10},\"startBody\":{\"col\":48,\"line\":10},\"endBody\":{\"col\":78,\"line\":10}}};\n    \nimport React from 'react';\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\nimport { NavBar } from '../components/NavBar/NavBar';\n\nexport default {\n    title: \"ReactComponentLibrary/NavBar\",\n    component: NavBar\n} as ComponentMeta<typeof NavBar>;\n\nconst Template: ComponentStory<typeof NavBar> = (args) => <NavBar {...args} />;\n\nexport const Primary = Template.bind({});\n\nPrimary.args = {\n    navbarData: [\n        {\n            id: 0,\n            name: 'Title',\n            link: '/',\n            items: [],\n            image: 'https://img.freepik.com/free-vector/meta-icon-soci…ber-2021-bangkok-thailand_53876-157871.jpg?w=2000'\n        },\n        { id: 1, title: 'Home', link: '/', items: [] },\n        {\n            id: 2,\n            title: 'About',\n            link: '/about',\n            items: [\n                { id: 4, title: 'Our Story', link: '/about/story' },\n                { id: 5, title: 'Our Team', link: '/about/team' }\n            ]\n        },\n        {\n            id: 3,\n            title: 'Contact',\n            link: '/contact',\n            items: [\n                { id: 6, title: 'CTO', link: '/contact/cto' },\n                { id: 7, title: 'Manager', link: '/contact/manager' }\n            ]\n        },\n        {\n            // id: 13,\n            // title: \"\",\n            // link: \"\",\n            // items: [],\n            button: [\n                { id: 11, title: 'Login', link: '/login' },\n                { id: 12, title: 'SignUp', link: '/signup' }\n            ]\n        }\n    ]\n};\n\n\n\nPrimary.parameters = { storySource: { source: \"(args) => <NavBar {...args} />\" }, ...Primary.parameters };"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AACA;AAAA;AAUA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAhBA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAeA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;;;AC3EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjFA;AACA;AAAA;AAAA;AAAA;AA0BA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAIA;AAGA;AAAA;AAEA;AAAA;AAEA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAGA;AAAA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAGA;AAAA;AACA;AAKA;AAAA;AAGA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAGA;AAAA;AACA;AAGA;AAEA;AACA;AACA;AAAA;AAAA;AAGA;AAAA;AACA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAGA;AAjIA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AA0BA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AAAA;AACA;AAEA;AACA;AACA;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjKA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AAIA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}