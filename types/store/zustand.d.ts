type Zustand = {
    imge: any | null;
    selectedFile: any;
    preview: any;
    steps: string[];
    status: string;
    cameraType: string;
    panStatusResult: string;
    panStatus: number;
    currentStep: number;
    uploadedImage: number;
    manageVeriyStep: number;
    panVerificationfailed: number;
    finish: boolean;
    isYourPan: boolean;
    completed: boolean;
    fetchData: boolean;
    getLocation: boolean;
    cameraStatus: boolean;
    sideBarToggle: boolean;
    setSideBarToggle: () => void;
    setImg: (input: any) => void;
    setCurrentStepPlus: () => void;
    setManageVeriyStep: () => void;
    setCurrentStepMinus: () => void;
    setPreview: (input: any) => void;
    setCurrentStepInitial: () => void;
    setStatus: (input: string) => void;
    setManageVeriyStepback: () => void;
    setFinish: (input: boolean) => void;
    setManageVeriyStepinital: () => void;
    setPanStatus: (input: number) => void;
    setSelectedFile: (input: any) => void;
    setCameraType: (input: string) => void;
    setIsYourPan: (input: boolean) => void;
    setFetchData: (input: boolean) => void;
    setCompleted: (input: boolean) => void;
    setGetlocation: (input: boolean) => void;
    setUploadedImage: (input: number) => void;
    setCameraStatus: (input: boolean) => void;
    setPanStatusResult: (input: string) => void;
    setCurrentStepInput: (input: number) => void;
    setPanVerificationdone: (input: number) => void;
    setPanVerificationfailed: (input: number) => void;
};
export declare const useStore: import("zustand").UseBoundStore<import("zustand").StoreApi<Zustand>>;
export {};
